<?php
/**
 * Unit tests for CData object.
 *
 * @access      private
 * @package     Creovel
 * @subpackage  UnitTest
 * @license     http://creovel.org/license MIT License
 * @since       Class available since Release 0.4.5
 **/
require_once dirname(dirname(__FILE__)) . DIRECTORY_SEPARATOR . 'env.php';

/**
 * Test class for CData.
 * Generated by PHPUnit on 2010-06-04 at 15:19:55.
 */
class CDataTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var CData
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new CData;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    public function test__call()
    {
        // PHP CLI error
        // $c = new CData('Nesbert Hidalgo');
        // print_r($c->camelize(true)->value());
        // die;
    }

    public function test__set()
    {
        $this->object = new CData('Nesbert Hidalgo');
        $this->assertEquals('Nesbert Hidalgo', $this->object->_attribites_->value);
        $this->object = new CData(array(1,2));
        $this->assertEquals(array(1,2), $this->object->_attribites_->value);
    }

    public function test__get()
    {
        $this->object = new CData('Nesbert Hidalgo');
        $this->assertEquals('Nesbert Hidalgo', $this->object->value);
        $this->object = new CData(array(1,2));
        $this->assertEquals(array(1,2), $this->object->value);
    }

    public function testLength()
    {
        $this->object = new CData('Nesbert Hidalgo');
        $this->assertEquals(15, $this->object->length());
        $this->object = new CData(array(1,2));
        $this->assertEquals(2, $this->object->length());
    }

    public function testBlank()
    {
        $this->assertTrue($this->object->blank());
        $this->object->value = 'Test';
        $this->assertFalse($this->object->blank());
    }

    public function testVal()
    {
        $this->object->value = 'Test';
        $this->assertEquals('Test', $this->object->val());
    }
}
?>
